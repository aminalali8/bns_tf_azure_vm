kind: Environment
name: VM-Deployment
type: primary
environmentVariables:
  ARM_CLIENT_ID: '<<INSERT YOUR VALUES HERE>>'
  ARM_CLIENT_SECRET: '<<INSERT YOUR VALUES HERE>>'
  ARM_SUBSCRIPTION_ID: '<<INSERT YOUR VALUES HERE>>'
  ARM_TENANT_ID: '<<INSERT YOUR VALUES HERE>>'
  tf_admin_user: bns # VM ADMIN USERNAME
  tf_location: 'France Central' # SET THE LOCATION YOU WISH TO DEPLOY IN.
components:
  - kind: Terraform
    name: terraform-azure-vm
    gitRepo: 'https://github.com/aminalali8/bns_tf_azure_vm.git'
    gitBranch: main
    gitApplicationPath: /
    runnerImage: 'hashicorp/terraform:1.5'
    deploy:
      - '/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf'
      - 'ssh-keygen -t rsa -b 4096 -f "./id_rsa" -N ""'
      - 'PRIV_KEY=$(cat id_rsa)'
      - 'PUB_KEY=$(cat id_rsa.pub)'
      - |
        cat << EOF > variables.tfvars
          # Suffix for naming resources
          suffix = "{{ env.unique }}"
          # Location for deploying resources
          location = "{{env.vars.tf_location}}"
          # Admin username for virtual machines or other resources
          admin_user = "{{env.vars.tf_admin_user}}"
          # Public key for SSH access
          public_key = "$PUB_KEY"
          # File name for the private key
          private_key_file_name = "id_rsa"
        EOF
      - 'terraform init -input=false -no-color'
      - 'terraform plan -var-file="variables.tfvars"'
      - 'terraform apply -var-file="variables.tfvars" -input=false -auto-approve -no-color'
      - 'BNS_TF_STATE_LIST=`terraform show -json`'
    destroy:
      - '/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf'
      - 'terraform init -input=false -no-color'
      - 'terraform destroy -var-file="variables.tfvars" -input=false -auto-approve -no-color'
    exportVariables:
      - PRIV_KEY
      - PUB_KEY
