kind: Environment
name: VM-Deployment
type: primary
environmentVariables:
  ARM_CLIENT_ID: '<<REPLACE_WITH_YOUR_SECRET>>'
  ARM_CLIENT_SECRET: '<<REPLACE_WITH_YOUR_SECRET>>'
  ARM_SUBSCRIPTION_ID: '<<REPLACE_WITH_YOUR_SECRET>>'
  ARM_TENANT_ID: '<<REPLACE_WITH_YOUR_SECRET>>'
  tf_admin_user: bns # VM ADMIN USERNAME
  tf_location: 'France Central' # SET THE LOCATION YOU WISH TO DEPLOY IN.
components:
  - kind: Terraform
    name: terraform-azure-vm
    gitRepo: 'https://github.com/aminalali8/bns_tf_azure_vm.git'
    gitBranch: main
    gitApplicationPath: /
    runnerImage: 'hashicorp/terraform:1.5'
    deploy:
      - '/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf'
      - |
        # Function to fix the formatting of the private key
        fix_private_key_format() {
            echo "$1" | sed 's/\\n/\n/g'
        }

        # Check if PRIV_KEY and PUB_KEY environment variables are set and not empty
        if [ -n "$PRIV_KEY" ] && [ -n "$PUB_KEY" ]; then
            echo "SSH keys found in environment variables. Creating key files."

            # Fix formatting of private key and create file
            fixed_priv_key=$(fix_private_key_format "$PRIV_KEY")
            echo "$fixed_priv_key" > ./id_rsa

            # Create public key file
            echo "$PUB_KEY" > ./id_rsa.pub

            # Set file permissions
            chmod 600 ./id_rsa
            chmod 644 ./id_rsa.pub
        else
            echo "SSH keys not found in environment variables. Generating new keys."
            ssh-keygen -t rsa -b 4096 -f "./id_rsa" -N ""
            PRIV_KEY=$(cat ./id_rsa)
            PUB_KEY=$(cat ./id_rsa.pub)
            # Optionally, export the keys as environment variables
            export PRIV_KEY
            export PUB_KEY
        fi
      - |
        cat << EOF > variables.tfvars
          # Suffix for naming resources
          suffix = "{{ env.unique }}"
          # Location for deploying resources
          location = "{{env.vars.tf_location}}"
          # Admin username for virtual machines or other resources
          admin_user = "{{env.vars.tf_admin_user}}"
          # Public key for SSH access
          public_key = "$PUB_KEY"
          # File name for the private key
          private_key_file_name = "id_rsa"
        EOF
      - 'terraform init -input=false -no-color'
      - 'terraform plan -var-file="variables.tfvars"'
      - 'terraform apply -var-file="variables.tfvars" -input=false -auto-approve -no-color'
      - 'BNS_TF_STATE_LIST=`terraform show -json`'
    destroy:
      - '/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf'
      - 'terraform init -input=false -no-color'
      - 'terraform destroy -var-file="variables.tfvars" -input=false -auto-approve -no-color'
    exportVariables:
      - PRIV_KEY
      - PUB_KEY
